syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.AFS";
option java_outer_classname = "AFS";
option objc_class_prefix = "HLW";

package FS;

service AFS {
  rpc GetAttr (GetAttrRequest) returns (GetAttrResponse) {}
  rpc Open (OpenRequest) returns (stream OpenResponse) {}
  rpc Close (stream CloseRequest) returns (CloseResponse){}
  rpc Truncate(TruncateRequest) returns (TruncateResponse) {}
  rpc Mkdir (MkdirRequest) returns (MkdirResponse) {}
  rpc Rmdir (RmdirRequest) returns (RmdirResponse) {}
  rpc Opendir (OpendirRequest) returns (OpendirResponse) {}
  rpc Releasedir (ReleasedirRequest) returns (ReleasedirResponse) {}
  rpc Readdir (ReaddirRequest) returns (ReaddirResponse) {}
  rpc Mknod (MknodRequest) returns (MknodResponse) {}
  rpc Rename (RenameRequest) returns (RenameResponse) {}
  rpc Creat (CreatRequest) returns (CreatResponse) {}
  rpc Unlink (UnlinkRequest) returns (UnlinkResponse) {}
}

message ReleasedirRequest {
  uint64 fh = 1;
}

message ReleasedirResponse {
  int32 errnum = 1;
}

message OpendirRequest {
  string path = 1;
}

message OpendirResponse {
  int32 errnum = 1;
  uint64 fh = 2;

}

message RmdirRequest {
  string path = 1;
}

message RmdirResponse {
  int32 errnum = 1;
}

message MkdirRequest {
  string path = 1;
  int32 mode = 2;
}

message MkdirResponse {
  int32 errnum = 1;
}

message CloseRequest {
  string path = 1;
  bytes  fileData = 2;
}

message CloseResponse {
  int32 errnum = 1;
}


message OpenRequest {
  string path = 1;
  int32 flags = 2;
}

message OpenResponse {
  int32 errnum = 1;
  bytes fileData = 2; 
}

message GetAttrRequest {
  string path = 1;
}

message GetAttrResponse {
  int32 errnum = 1;
  bytes statBuf = 2;
}

message RenameRequest {
  string oldpath = 1;
  string newpath = 2;
}

message RenameResponse {
  int32 status = 1;
}

message TruncateRequest {
  string path = 1;
  int32 len = 2;
}

message TruncateResponse {
  int32 errnum = 1;
}

message MknodRequest {
  string path = 1;
  uint32 mode = 2;
  uint64 dev = 3;
}

message MknodResponse {
  int32 errnum = 1;
}

message ReaddirRequest {
  uint64 dp = 1;
}

message ReaddirResponse {
  int32 numentries = 1;
  bytes dirent = 2;
  bytes dnames = 3;
}

message CreatRequest {
  string path = 1;
  uint32 mode = 2;
  int32 flags = 3;
}

message CreatResponse {
  int32 errnum = 1;
}

message UnlinkRequest {
  string path = 1;
}

message UnlinkResponse {
  int32 errnum = 1;
}